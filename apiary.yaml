openapi: 3.0.0
info:
  title: EasyMovies API
  version: ""
  description: ""
paths:
  /users/register:
    post:
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              allOf:
                - $ref: '#/components/schemas/UserCredentials'
                - $ref: '#/components/schemas/UserData'
                - $ref: '#/components/requestBodies/Image'
          image/jpeg:
            schema:
              type: string
      responses:
        "201":
          description: Created
        "409":
          description: Conflict
        "500":
          description: Internal Server Error
      summary: Register new User
      operationId: Register new User
      description: ""
  /users/login:
    post:
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/UserCredentials'
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Access with Credentials
      operationId: Access with Credentials
      description: ""
  /users/{username}/logout:
    post:
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Log out and delete session
      operationId: Log out and delete session
      description: ""
  /users/{username}:
    get:
      responses:
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/UserData'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: Get Public User Data
      operationId: Get Public User Data
      description: ""
  /users/{username}/profilepic:
    get:
      responses:
        "200":
          description: OK
          content:
            image/jpeg:
              schema:
                type: string
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: Get User Profile Picture
      operationId: Get User Profile Picture
      description: ""
  /users/{username}/reviews:
    get:
      responses:
        "200":
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Review'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: Get User Reviews
      operationId: Get User Reviews
      description: ""
  /users/{username}/playlists:
    get:
      responses:
        "200":
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Playlist'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: Get User Playlists
      operationId: Get User Playlists
      description: ""
    post:
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/Playlist'
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: Create a new Playlist
      operationId: Create a new Playlist
      description: ""
    delete:
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              required:
                - playlistId
              properties:
                playlistId:
                  type: string
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: Delete Playlist
      operationId: Delete Playlist
      description: ""
  /users/{username}/playlists/{playlistId}:
    post:
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              required:
                - movieId
              properties:
                movieId:
                  type: string
      responses:
        "201":
          description: OK
        "404":
          description: Not Found
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Add movie to playlist
      operationId: Add movie to playlist
      description: ""
    patch:
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              required:
                - newname
              properties:
                newname:
                  type: string
      responses:
        "201":
          description: OK
        "404":
          description: Not Found
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Edit playlist name
      operationId: Edit playlist name
      description: ""
    delete:
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              required:
                - movieId
              properties:
                movieId:
                  type: string
      responses:
        "200":
          description: OK
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: Remove movie from playlist
      operationId: Remove movie from playlist
      description: ""
  /movies/{movieId}:
    get:
      responses:
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Movie'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: Get Movie Data
      operationId: Get Movie Data
      description: ""
  /movies/{movieId}/reviews:
    get:
      responses:
        "200":
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Review'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: Get Movie Reviews
      operationId: Get Movie Reviews
      description: ""
    post:
      responses:
        "201":
          description: Review Created
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: Add Movie Review
      operationId: Add Movie Review
      description: ""
    delete:
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              required:
                - movieId
                - username
              properties:
                movieId:
                  type: string
                username:
                  type: string
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: Delete Movie Review
      operationId: Delete Movie Review
      description: ""
    patch:
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              required:
                - newreview
              properties:
                newreview:
                  $ref: '#/components/schemas/Review'
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: Modify Movie Review
      operationId: Modify Movie Review
      description: ""
  /catalog/{catalogName}:
    get:
      responses:
        "200":
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Movie'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: Get Catalog Movies List
      operationId: Get Catalog Movies List
      description: ""
servers:
  - url: https://localhost:5000/
components:
  schemas:
    Error:
      type: object
      properties:
        error: 
          type: string
    UserCredentials:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
        password:
          type: string
    UserData:
      type: object
      required:
      - name
      - surname
      - username
      properties:
        name:
          type: string
        surname:
          type: string
        username:
          type: string
    Movie:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        overview:
          type: string
        trailerUrl:
          type: string
        duration:
          type: string
        releaseDate:
          type: string
        genre:
          type: string
    Review:
      type: object
      required:
      - movieId
      - username
      - title
      - content
      - rate
      properties:
        movieId:
          type: integer
        uername:
          type: string
        title:
          type: string
        content:
          type: string
        rate:
          type: number
          format: float
    Playlist:
      type: object
      properties:
        uername:
          type: string
        name:
          type: string
        movies:
          type: array
          items:
            $ref: '#/components/schemas/Movie'
  requestBodies:
    Image:
      description: An image.
      content:
        image/jpg:
          schema:
            type: string
